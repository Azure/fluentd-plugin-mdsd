# Configure syslog source (for LAD-syslog basic config)
<source>
  type syslog
  port 25224
  bind 127.0.0.1
  protocol_type udp
  include_source_host true  # This should be set for SendingHost field.
  tag mdsd.syslog
</source>

# Configure syslog source (for LAD-syslog extended config)
<source>
  type syslog
  port 25225
  bind 127.0.0.1
  protocol_type udp
  include_source_host true  # This should be set for SendingHost field.
  tag mdsd.ext_syslog
</source>

# Generate fields expected for existing mdsd syslog collection schema
<filter mdsd.{syslog,ext_syslog}.**>
  @type record_transformer
  enable_ruby
  <record>
    # Fields expected by mdsd for syslog messages
    Ignore "syslog"
    Facility ${tag_parts[2]}
    Severity ${tag_parts[3]}
    EventTime ${time.strftime('%Y-%m-%dT%H:%M:%S%z')}
    SendingHost ${record["source_host"]}
    Msg ${record["message"]}
  </record>
  remove_keys host,ident,pid,message,source_host  # No need of these fields for mdsd so remove
</filter>

# Output to mdsd
<match mdsd.**>
    type mdsd
    log_level warn #trace
    djsonsocket /var/run/mdsd/default_djson.socket  # Full path to mdsd dynamic json socket file
    acktimeoutms 5000  # max time in milli-seconds to wait for mdsd acknowledge response. If 0, no wait.
    mdsd_tag_regex_patterns [ "^mdsd\\.syslog" ]  # fluentd tag patterns whose match will be used as mdsd source name
    num_threads 1
    buffer_chunk_limit 1000k
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_mdsd*.buffer
    buffer_queue_limit 128
    flush_interval 10s
    retry_limit 3
    retry_wait 10s
</match>
